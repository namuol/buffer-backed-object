"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});function O(t){return typeof t=="symbol"?!1:!isNaN(t)}function E(t,e){let n=t-t%e;return t%e!=0&&(n+=e),n}function d(t){let e=0;for(const{align:n=1,size:i}of Object.values(t))e=E(e,n)+i;return e=E(e,b(t)),e}function b(t){return Math.max(...Object.values(t).map(e=>e.align??1))}function y(t,e,{byteOffset:n=0,length:i=0,align:r=b(e)}={}){const l=new DataView(t,n);let u=0;const a={...e};for(const[f,o]of Object.entries(a))a[f]={...o,offset:E(u,o.align??1)},u=a[f].offset+o.size;return u=E(u,r),i||(i=Math.floor((t.byteLength-n)/u)),new Proxy(new Array(i),{has(f,o){return O(o)?o<i:o==="buffer"?!0:o in f},get(f,o,U){if(o==="buffer")return t;if(!O(o)){let c=f[o];return typeof c=="function"&&(c=c.bind(U)),c}const s=parseInt(o),B=s*u;if(!(s>=f.length)){if(!f[s]){f[s]={};for(const[c,g]of Object.entries(a))"get"in g&&Object.defineProperty(f[s],c,{enumerable:!0,get(){return g.get(l,B+g.offset)},set(I){return g.set(l,B+g.offset,I)}});Object.freeze(f[s])}return f[s]}}})}function T(t,e,{byteOffset:n=0,align:i=1}={}){return y(t,e,{byteOffset:n,align:i})[0]}function h({endianness:t="little",align:e=2}={}){if(t!=="big"&&t!=="little")throw Error("Endianness needs to be either 'big' or 'little'");const n=t==="little";return{type:"Uint16",align:e,size:Uint16Array.BYTES_PER_ELEMENT,get:(i,r)=>i.getUint16(r,n),set:(i,r,l)=>i.setUint16(r,l,n)}}function A({endianness:t="little",align:e=4}={}){if(t!=="big"&&t!=="little")throw Error("Endianness needs to be either 'big' or 'little'");const n=t==="little";return{type:"Uint32",align:e,size:Uint32Array.BYTES_PER_ELEMENT,get:(i,r)=>i.getUint32(r,n),set:(i,r,l)=>i.setUint32(r,l,n)}}function w({endianness:t="little",align:e=2}={}){if(t!=="big"&&t!=="little")throw Error("Endianness needs to be either 'big' or 'little'");const n=t==="little";return{type:"Int16",align:e,size:Int16Array.BYTES_PER_ELEMENT,get:(i,r)=>i.getInt16(r,n),set:(i,r,l)=>i.setInt16(r,l,n)}}function j({endianness:t="little",align:e=4}={}){if(t!=="big"&&t!=="little")throw Error("Endianness needs to be either 'big' or 'little'");const n=t==="little";return{type:"Int32",align:e,size:Int32Array.BYTES_PER_ELEMENT,get:(i,r)=>i.getInt32(r,n),set:(i,r,l)=>i.setInt32(r,l,n)}}function z({endianness:t="little",align:e=4}={}){if(t!=="big"&&t!=="little")throw Error("Endianness needs to be either 'big' or 'little'");const n=t==="little";return{type:"Float32",align:e,size:Float32Array.BYTES_PER_ELEMENT,get:(i,r)=>i.getFloat32(r,n),set:(i,r,l)=>i.setFloat32(r,l,n)}}function _({endianness:t="little",align:e=8}={}){if(t!=="big"&&t!=="little")throw Error("Endianness needs to be either 'big' or 'little'");const n=t==="little";return{type:"Float64",align:e,size:Float64Array.BYTES_PER_ELEMENT,get:(i,r)=>i.getFloat64(r,n),set:(i,r,l)=>i.setFloat64(r,l,n)}}function F({endianness:t="little",align:e=8}={}){if(t!=="big"&&t!=="little")throw Error("Endianness needs to be either 'big' or 'little'");const n=t==="little";return{type:"BigInt64",align:e,size:BigInt64Array.BYTES_PER_ELEMENT,get:(i,r)=>i.getBigInt64(r,n),set:(i,r,l)=>i.setBigInt64(r,l,n)}}function S({endianness:t="little",align:e=8}={}){if(t!=="big"&&t!=="little")throw Error("Endianness needs to be either 'big' or 'little'");const n=t==="little";return{type:"BigUint64",align:e,size:BigUint64Array.BYTES_PER_ELEMENT,get:(i,r)=>i.getBigUint64(r,n),set:(i,r,l)=>i.setBigUint64(r,l,n)}}function M(){return{type:"Uint8",align:1,size:1,get:(t,e)=>t.getUint8(e),set:(t,e,n)=>t.setUint8(e,n)}}function N(){return{type:"Int8",align:1,size:1,get:(t,e)=>t.getInt8(e),set:(t,e,n)=>t.setInt8(e,n)}}function P(t){const e=d(t);return{type:"NestedBufferBackedObject",align:b(t),size:e,innerDescriptors:t,get:(n,i)=>y(n.buffer,t,{byteOffset:n.byteOffset+i,length:1})[0],set:(n,i,r)=>{throw Error("Can’t set an entire struct")}}}function k(t,e){const n=d(e)*t;return{type:"NestedArrayOfBufferBackedObjects",align:Object.values(e)[0].align??1,size:n,innerDescriptors:e,get:(i,r)=>y(i.buffer,e,{byteOffset:r+i.byteOffset,length:t}),set:(i,r,l)=>{throw Error("Can’t set an entire array")}}}function v(t){return{type:"UTF8String",align:1,size:t,get:(e,n)=>new TextDecoder().decode(new Uint8Array(e.buffer,n,t)).replace(/\u0000+$/,""),set:(e,n,i)=>{const r=new TextEncoder().encode(i),l=new Uint8Array(e.buffer,n,t);l.fill(0),l.set(r.subarray(0,t))}}}function L(t){return{type:"reserved",align:1,size:t,get(){},set(){}}}exports.ArrayOfBufferBackedObjects=y;exports.BigInt64=F;exports.BigUint64=S;exports.BufferBackedObject=T;exports.Float32=z;exports.Float64=_;exports.Int16=w;exports.Int32=j;exports.Int8=N;exports.NestedArrayOfBufferBackedObjects=k;exports.NestedBufferBackedObject=P;exports.UTF8String=v;exports.Uint16=h;exports.Uint32=A;exports.Uint8=M;exports.nextAlign=E;exports.reserved=L;exports.structAlign=b;exports.structSize=d;
